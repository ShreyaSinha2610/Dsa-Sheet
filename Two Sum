https://leetcode.com/problems/two-sum/description/

class Solution {
// public:
//     vector<int> twoSum(vector<int>& nums, int target) {

        //Brute Force Approach
        // TC  = O(n^2)
        
//         for(int i=0;i<nums.size()-1;i++)
//         {
//             for(int j=i+1;j<nums.size();j++)
            
//                 if(nums[i]+nums[j]==target) return{i,j};
//         }
//         return {};
//     }
// };


//Better Approach
//Using HashMap
//TC - O(N)
// class Solution {
// public:
//     vector<int> twoSum(vector<int>& nums, int target) {
//         map<int,int> mpp;
//         for(int i = 0; i<nums.size(); i++){
//             int num  = nums[i];
//             int next = target  - num;
//             if(mpp.find(next) != mpp.end()){
//                 return {mpp[next] , i};
//             }
//             mpp[num] = i;
//         }
//         return {-1 , -1};
//     }
// };
